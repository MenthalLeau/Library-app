{"ast":null,"code":"var _jsxFileName = \"/Users/erwan/Documents/Library-app/client/src/components/login.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import du hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate(); // Hook pour rediriger\n\n  const handleLogin = () => {\n    // Logique d'authentification ici (par exemple, validation des champs)\n    // Si l'authentification est réussie, redirigez l'utilisateur :\n    navigate('/'); // Redirection vers la route de votre choix (par exemple \"/\")\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","handleLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","onClick","_c","$RefreshReg$"],"sources":["/Users/erwan/Documents/Library-app/client/src/components/login.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import du hook\n\nfunction Login() {\n    const navigate = useNavigate(); // Hook pour rediriger\n\n    const handleLogin = () => {\n        // Logique d'authentification ici (par exemple, validation des champs)\n        // Si l'authentification est réussie, redirigez l'utilisateur :\n        navigate('/'); // Redirection vers la route de votre choix (par exemple \"/\")\n    };\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\" className=\"form-control\" id=\"username\" />\n\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" className=\"form-control\" id=\"password\" />\n\n                <button className=\"btn btn-primary\" onClick={handleLogin}>\n                    Login\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtB;IACA;IACAD,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACIH,OAAA;IAAAK,QAAA,gBACIL,OAAA;MAAAK,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdT,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAL,QAAA,gBACvBL,OAAA;QAAOW,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CT,OAAA;QAAOY,IAAI,EAAC,MAAM;QAACF,SAAS,EAAC,cAAc;QAACG,EAAE,EAAC;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE5DT,OAAA;QAAOW,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CT,OAAA;QAAOY,IAAI,EAAC,UAAU;QAACF,SAAS,EAAC,cAAc;QAACG,EAAE,EAAC;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEhET,OAAA;QAAQU,SAAS,EAAC,iBAAiB;QAACI,OAAO,EAAEV,WAAY;QAAAC,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACP,EAAA,CAzBQD,KAAK;EAAA,QACOH,WAAW;AAAA;AAAAiB,EAAA,GADvBd,KAAK;AA2Bd,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}