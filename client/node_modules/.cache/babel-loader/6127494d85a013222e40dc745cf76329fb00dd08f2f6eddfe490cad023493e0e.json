{"ast":null,"code":"var _jsxFileName = \"/Users/erwan/Documents/Library-app/client/src/components/login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    // Exemple de validation simple des identifiants\n    if (email === 'user@example.com' && password === 'password') {\n      // Données utilisateur fictives\n      const userData = {\n        id: '1',\n        name: 'John Doe',\n        email\n      };\n      login(userData); // Appel du login du contexte pour stocker l'utilisateur\n      navigate('/dashboard'); // Redirection vers le dashboard\n    } else {\n      alert('Identifiants incorrects');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Mot de passe\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Se connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"QG2lSHcBIUb1C5UgZTQaWsURlh0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","login","navigate","handleLogin","userData","id","name","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/erwan/Documents/Library-app/client/src/components/login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login: React.FC = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const { login } = useAuth();\n    const navigate = useNavigate();\n\n    const handleLogin = () => {\n        // Exemple de validation simple des identifiants\n        if (email === 'user@example.com' && password === 'password') {\n            // Données utilisateur fictives\n            const userData = { id: '1', name: 'John Doe', email };\n            login(userData); // Appel du login du contexte pour stocker l'utilisateur\n            navigate('/dashboard'); // Redirection vers le dashboard\n        } else {\n            alert('Identifiants incorrects');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Connexion</h1>\n            <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <input\n                type=\"password\"\n                placeholder=\"Mot de passe\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button onClick={handleLogin}>Se connecter</button>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEW;EAAM,CAAC,GAAGV,OAAO,CAAC,CAAC;EAC3B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB;IACA,IAAIN,KAAK,KAAK,kBAAkB,IAAIE,QAAQ,KAAK,UAAU,EAAE;MACzD;MACA,MAAMK,QAAQ,GAAG;QAAEC,EAAE,EAAE,GAAG;QAAEC,IAAI,EAAE,UAAU;QAAET;MAAM,CAAC;MACrDI,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;MACjBF,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM;MACHK,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MACImB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAElB,KAAM;MACbmB,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFlB,OAAA;MACImB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEhB,QAAS;MAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAEhB,WAAY;MAAAK,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAAChB,EAAA,CApCID,KAAe;EAAA,QAGCJ,OAAO,EACRC,WAAW;AAAA;AAAA4B,EAAA,GAJ1BzB,KAAe;AAsCrB,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}